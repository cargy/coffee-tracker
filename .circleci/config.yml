# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.11-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn lint

      - run:
          name: Run frontend tests
          command: |
            yarn test --code-coverage --watch=false --no-progress
            ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.frontend.json coverage/lcov.info

      - run:
          name: Build app in production mode
          command: |
            yarn build --prod

      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.frontend.json

      - run:
          name: Skip deploying for Pull Requests and Fork builds
          # Note, `|| true` on the end makes this step always exit 0
          command: '[[
              -v CIRCLE_PR_NUMBER
              || "$CIRCLE_PROJECT_USERNAME" != "angular"
              || "$CIRCLE_PROJECT_REPONAME" != "angular"
          ]] && circleci step halt || true'

      - run:
          name: Deploy app to firebase
          command: |
            ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN
